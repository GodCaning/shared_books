<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE mapper PUBLIC "-//testMybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xust.wtc.Dao.book.CommentMapper">

    <resultMap id="comment" type="com.xust.wtc.Entity.book.Comment">
        <result property="id" column="comment_id"/>
        <result property="bookId" column="book_id"/>
        <result property="commentPersonId" column="person_id"/>
        <result property="commentPersonName" column="person_name"/>
        <result property="parentId" column="parent_id"/>
        <result property="commentType" column="comment_type"/>
        <result property="content" column="comment_content"/>
        <result property="timestamp" column="create_date"/>
    </resultMap>
    
    <!-- 获取一个书籍的所有评论 -->
    <select id="findCommentByBookId" parameterType="int" resultMap="comment">
        SELECT comment_id, book_id, p.person_id, person_name, parent_id, comment_type, comment_content, c.create_date
        FROM comment c JOIN person p ON c.person_id = p.person_id
        WHERE book_id = #{id} AND c.status = 1;
    </select>

    <!-- 删除评论或者回复 -->
    <update id="deleteCommentById" parameterType="int">
        UPDATE comment
        SET status = 0
        WHERE comment_id = #{id}
    </update>

    <!-- 插入一条评论或者回复 -->
    <insert id="addComment" parameterType="com.xust.wtc.Entity.book.Comment">
        INSERT INTO comment(book_id, person_id, parent_id, comment_type, comment_content)
        VALUES(#{bookId}, #{commentPersonId}, #{parentId}, #{commentType}, #{content})
    </insert>

</mapper>